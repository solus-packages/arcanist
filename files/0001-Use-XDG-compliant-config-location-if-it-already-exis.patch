From 75c1169ab257ef5133f4b6376c4e4fedb1ae047d Mon Sep 17 00:00:00 2001
From: Campbell Jones <git@serebit.com>
Date: Sun, 2 Aug 2020 00:05:04 -0400
Subject: [PATCH] Use XDG compliant config location if it already exists

---
 .../ArcanistConfigurationManager.php          | 22 +++++++++++++++----
 .../ArcanistInstallCertificateWorkflow.php    |  5 +++--
 2 files changed, 21 insertions(+), 6 deletions(-)

diff --git a/src/configuration/ArcanistConfigurationManager.php b/src/configuration/ArcanistConfigurationManager.php
index 0d0a92e7..6cb48d76 100644
--- a/src/configuration/ArcanistConfigurationManager.php
+++ b/src/configuration/ArcanistConfigurationManager.php
@@ -194,10 +194,10 @@ final class ArcanistConfigurationManager extends Phobject {
             $prompt = pht(
               "File permissions on your %s are too open. ".
               "Fix them by chmod'ing to 600?",
-              '~/.arcrc');
+              $user_config_path);
             if (!phutil_console_confirm($prompt, $default_no = false)) {
               throw new ArcanistUsageException(
-                pht('Set %s to file mode 600.', '~/.arcrc'));
+                pht('Set %s to file mode 600.', $user_config_path));
             }
             execx('chmod 600 %s', $user_config_path);
 
@@ -213,7 +213,7 @@ final class ArcanistConfigurationManager extends Phobject {
           $user_config = phutil_json_decode($user_config_data);
         } catch (PhutilJSONParserException $ex) {
           throw new PhutilProxyException(
-            pht("Your '%s' file is not a valid JSON file.", '~/.arcrc'),
+            pht("Your '%s' file is not a valid JSON file.", $user_config_path),
             $ex);
         }
       } else {
@@ -258,6 +258,7 @@ final class ArcanistConfigurationManager extends Phobject {
   }
 
   public function getUserConfigurationFileLocation() {
+    $console = PhutilConsole::getConsole();
     if (strlen($this->customArcrcFilename)) {
       return $this->customArcrcFilename;
     }
@@ -265,7 +266,20 @@ final class ArcanistConfigurationManager extends Phobject {
     if (phutil_is_windows()) {
       return getenv('APPDATA').'/.arcrc';
     } else {
-      return getenv('HOME').'/.arcrc';
+      $home_dir = getenv('HOME');
+      $alt_config = $home_dir.'/.config/arcrc';
+      $xdg_config_dir = getenv('XDG_CONFIG_DIR');
+
+      if ($xdg_config_dir != FALSE) {
+        $xdg_config = $xdg_config_dir.'/arcrc';
+        if (file_exists($xdg_config)) {
+          return $xdg_config;
+        }
+      } elseif (file_exists($alt_config)) {
+        return $alt_config;
+      } else {
+        return $home_dir.'/.arcrc';
+      }
     }
   }
 
diff --git a/src/workflow/ArcanistInstallCertificateWorkflow.php b/src/workflow/ArcanistInstallCertificateWorkflow.php
index a352b21d..713d0030 100644
--- a/src/workflow/ArcanistInstallCertificateWorkflow.php
+++ b/src/workflow/ArcanistInstallCertificateWorkflow.php
@@ -19,7 +19,7 @@ EOTEXT
   public function getCommandHelp() {
     return phutil_console_format(<<<EOTEXT
           Supports: http, https
-          Installs Conduit credentials into your ~/.arcrc for the given install
+          Installs Conduit credentials into your config file for the given install
           of Phabricator. You need to do this before you can use 'arc', as it
           enables 'arc' to link your command-line activity with your account on
           the web. Run this command from within a project directory to install
@@ -55,6 +55,7 @@ EOTEXT
     $configuration_manager = $this->getConfigurationManager();
 
     $config = $configuration_manager->readUserConfigurationFile();
+    $config_path = $configuration_manager->getUserConfigurationFileLocation();
 
     $this->writeInfo(
       pht('CONNECT'),
@@ -168,7 +169,7 @@ EOTEXT
       );
     }
 
-    echo pht('Writing %s...', '~/.arcrc')."\n";
+    echo pht('Writing %s...', $config_path)."\n";
     $configuration_manager->writeUserConfigurationFile($config);
 
     if ($is_token_auth) {
-- 
2.27.0

